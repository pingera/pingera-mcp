tests/test_config.py ....                                           [ 22%]
tests/test_mcp_server.py F......                                    [ 61%]
tests/test_models.py .......                                        [100%]

================================ FAILURES =================================
________________ TestMCPServer.test_pages_resource_success ________________

self = <tests.test_mcp_server.TestMCPServer object at 0x7f847c448090>
server = (<mcp.server.fastmcp.server.FastMCP object at 0x7f847c455890>, <Mock name='PingeraClient()' id='140206997304656'>)
mock_page_list = PageList(pages=[Page(name='Test Page', id='123', created_at='2024-01-01T00:00:00Z', updated_at='2024-01-01T00:00:00Z',... css_border_color=None, css_graph_color=None, css_spinner_color=None, css_no_data=None)], total=1, page=1, per_page=10)

    @pytest.mark.asyncio
    async def test_pages_resource_success(self, server, mock_page_list):
        """Test successful pages resource retrieval."""
        mcp_server, mock_client = server
        mock_client.get_pages.return_value = mock_page_list
    
        # Test the resource by calling the handler directly
        # FastMCP stores resources in a different way - we'll test the actual function
>       with patch('mcp_server.pingera_client', mock_client):

tests/test_mcp_server.py:33: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:1446: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <unittest.mock._patch object at 0x7f847c49e8d0>

    def get_original(self):
        target = self.getter()
        name = self.attribute
    
        original = DEFAULT
        local = False
    
        try:
            original = target.__dict__[name]
        except (AttributeError, KeyError):
            original = getattr(target, name, DEFAULT)
        else:
            local = True
    
        if name in _builtins and isinstance(target, ModuleType):
            self.create = True
    
        if not self.create and original is DEFAULT:
>           raise AttributeError(
                "%s does not have the attribute %r" % (target, name)
            )
E           AttributeError: <module 'mcp_server' from '/home/runner/workspace/mcp_server.py'> does not have the attribute 'pingera_client'

/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:1419: AttributeError